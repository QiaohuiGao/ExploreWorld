{"ast":null,"code":"var _jsxFileName = \"/Users/qiaohui/SportifyMe/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StartScreen from './StartScreen.jsx';\nimport TaskPage from './TaskPage.jsx';\nimport ResultPage from './ResultPage.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([{}]);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n\n  const [currentPage, setCurrentPage] = useState('start');\n\n  // handle page navigation\n  const handleNavigation = page => {\n    setCurrentPage(page);\n  };\n\n  // collect data from each task\n  const [formData, setFormData] = useState({\n    task1: '',\n    task2: '',\n    task3: ''\n  });\n\n  // #qiaohui: Add a new state to store video URLs\n  const [videoUrls] = useState({\n    task1: '/videos/Set_up.mp4',\n    task2: '/videos/deep_squats.mp4',\n    task3: '/videos/Single_leg_balance.mp4'\n  });\n\n  // Function to collect data from each task page\n  const handleDataChange = (taskName, data) => {\n    setFormData(prev => ({\n      ...prev,\n      [taskName]: data // Update specific task data\n    }));\n  };\n\n  // After completing all tasks, map the task results to the three aspects\n  const getTaskResults = () => ({\n    strengthEndurance: formData.task1,\n    flexibility: formData.task2,\n    balanceCoordination: formData.task3\n  });\n\n  // Fetching data from backend\n  const fetchData = () => {\n    setLoading(true);\n    fetch('/api/users').then(res => res.json()).then(data => {\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setError('Error fetching data');\n      setLoading(false);\n    });\n  };\n\n  // Call fetchData on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Click the button to send a POST request and refresh data\n  const handleAddMetric = () => {\n    const userId = '6700a5db530c1f6c2df55392'; // The user_id is hardcoded here\n\n    axios.post(`/api/add_metric/${userId}`).then(response => {\n      console.log(response.data);\n      alert(response.data.message); // Show success message in alert\n      fetchData(); // Re-fetch data after metric is added\n    }).catch(error => {\n      console.error('There was an error adding the fitness metric!', error);\n      alert('Error adding fitness metric');\n    });\n  };\n\n  // Displaying data on the frontend\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPage === 'start' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStart: () => handleNavigation('task1')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 35\n    }, this), currentPage === 'task1' && /*#__PURE__*/_jsxDEV(TaskPage, {\n      title: \"Task 1\",\n      content: \"Do as many step-ups as possible in 10 seconds.\",\n      onNext: () => handleNavigation('task2'),\n      onDataSubmit: data => handleDataChange('task1', data),\n      videoUrl: videoUrls.task1 // #qiaohui: Add this line\n      ,\n      sportType: \"step-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 35\n    }, this), currentPage === 'task2' && /*#__PURE__*/_jsxDEV(TaskPage, {\n      title: \"Task 2\",\n      content: \"Do as many as deep squats in 10 seconds.\",\n      onNext: () => handleNavigation('task3'),\n      onDataSubmit: data => handleDataChange('task2', data),\n      videoUrl: videoUrls.task2 // #qiaohui: Add this line\n      ,\n      sportType: \"deep-squat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 35\n    }, this), currentPage === 'task3' && /*#__PURE__*/_jsxDEV(TaskPage, {\n      title: \"Task 3\",\n      content: \"Stand on one leg and balance for as long as possible.\",\n      onNext: () => handleNavigation('results'),\n      onDataSubmit: data => handleDataChange('task3', data),\n      videoUrl: videoUrls.task3 // #qiaohui: Add this line\n      ,\n      sportType: \"single-leg-balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 35\n    }, this), currentPage === 'results' && /*#__PURE__*/_jsxDEV(ResultPage, {\n      results: getTaskResults()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XKO7bYC9RXtDjj9ivhE71L84M6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","StartScreen","TaskPage","ResultPage","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","currentPage","setCurrentPage","handleNavigation","page","formData","setFormData","task1","task2","task3","videoUrls","handleDataChange","taskName","prev","getTaskResults","strengthEndurance","flexibility","balanceCoordination","fetchData","fetch","then","res","json","catch","console","log","handleAddMetric","userId","post","response","alert","message","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onNext","onDataSubmit","videoUrl","sportType","results","_c","$RefreshReg$"],"sources":["/Users/qiaohui/SportifyMe/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StartScreen from './StartScreen.jsx';\nimport TaskPage from './TaskPage.jsx';\nimport ResultPage from './ResultPage.jsx';\n\nconst App = () => {\n  const [data, setData] = useState([{}]);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n\n  const [currentPage, setCurrentPage] = useState('start');\n\n  // handle page navigation\n  const handleNavigation = (page) => {\n    setCurrentPage(page);\n  }\n\n  // collect data from each task\n  const [formData, setFormData] = useState({\n    task1: '',\n    task2: '',\n    task3: ''\n  });\n\n  // #qiaohui: Add a new state to store video URLs\n  const [videoUrls] = useState({\n    task1: '/videos/Set_up.mp4',\n    task2: '/videos/deep_squats.mp4',\n    task3: '/videos/Single_leg_balance.mp4'\n  });\n\n  // Function to collect data from each task page\n  const handleDataChange = (taskName, data) => {\n    setFormData((prev) => ({\n      ...prev,\n      [taskName]: data,  // Update specific task data\n    }));\n  };\n\n  // After completing all tasks, map the task results to the three aspects\n  const getTaskResults = () => ({\n    strengthEndurance: formData.task1,\n    flexibility: formData.task2,\n    balanceCoordination: formData.task3\n  });\n\n  // Fetching data from backend\n  const fetchData = () => {\n    setLoading(true);\n    fetch('/api/users')\n      .then(res => res.json())\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Error fetching data');\n        setLoading(false);\n      });\n  };\n\n  // Call fetchData on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Click the button to send a POST request and refresh data\n  const handleAddMetric = () => {\n    const userId = '6700a5db530c1f6c2df55392'; // The user_id is hardcoded here\n\n    axios.post(`/api/add_metric/${userId}`)\n      .then(response => {\n        console.log(response.data);\n        alert(response.data.message); // Show success message in alert\n        fetchData(); // Re-fetch data after metric is added\n      })\n      .catch(error => {\n        console.error('There was an error adding the fitness metric!', error);\n        alert('Error adding fitness metric');\n      });\n  };\n\n  // Displaying data on the frontend\n  return (\n    <div>\n      {currentPage === 'start' && <StartScreen\n        onStart={() => handleNavigation('task1')}\n      />}\n      {currentPage === 'task1' && <TaskPage\n        title=\"Task 1\"\n        content=\"Do as many step-ups as possible in 10 seconds.\"\n        onNext={() => handleNavigation('task2')}\n        onDataSubmit={(data) => handleDataChange('task1', data)}\n        videoUrl={videoUrls.task1}  // #qiaohui: Add this line\n        sportType=\"step-up\"\n      />}\n      {currentPage === 'task2' && <TaskPage\n        title=\"Task 2\"\n        content=\"Do as many as deep squats in 10 seconds.\"\n        onNext={() => handleNavigation('task3')}\n        onDataSubmit={(data) => handleDataChange('task2', data)}\n        videoUrl={videoUrls.task2}  // #qiaohui: Add this line\n        sportType=\"deep-squat\"\n\n      />}\n      {currentPage === 'task3' && <TaskPage\n        title=\"Task 3\"\n        content=\"Stand on one leg and balance for as long as possible.\"\n        onNext={() => handleNavigation('results')}\n        onDataSubmit={(data) => handleDataChange('task3', data)}\n        videoUrl={videoUrls.task3}  // #qiaohui: Add this line\n        sportType=\"single-leg-balance\"\n      />}\n\n      {currentPage === 'results' && (\n        <ResultPage\n          results={getTaskResults()}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}